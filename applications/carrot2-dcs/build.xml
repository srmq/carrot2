<!--
  Internal build script for Carrot2 Document Clustering Server. 
  Please use the 'dcs' target from the main build script to build the DCS.
  -->
<project name="carrot2.dcs" default="basedir.check">
  <!-- Base dir determined from the build file location -->
  <dirname property="carrot2.dcs.basedir"
           file="${ant.file.carrot2.dcs}" />

  <!-- Master build base dir -->
  <property name="carrot2.master.basedir"
            location="${carrot2.dcs.basedir}/../../" />

  <!-- Import common macros -->
  <import file="${carrot2.master.basedir}/etc/ant/common/basedir.xml" />
  <import file="${carrot2.master.basedir}/etc/ant/common/readme.xml" />

  <!-- DCS build dirs -->
  <property name="dcs.dir" location="tmp/dcs" />

  <!-- DCS WAR -->
  <property name="dcs.war.dir" location="${dcs.dir}/war" />
  <property name="dcs.war.base.name" value="${carrot2.dcs.base}" />
 
  <!-- DCS dist file name base -->
  <property name="dcs.dist.base" value="${carrot2.dcs.base}" />

  <!-- DCS-specific dependencies -->
  <patternset id="lib.dcs">
    <include name="applications/carrot2-dcs/lib/*.jar" />
    <include name="applications/carrot2-dcs/lib/*.LICENSE" />
    <include name="lib/org.apache.log4j/*.LICENSE" />
    <include name="lib/org.apache.log4j/*.jar" />
    <include name="lib/org.slf4j/slf4j.LICENSE" />
    <include name="lib/org.slf4j/slf4j-log4j12-*.jar" />
    <include name="lib/org.slf4j/slf4j-api-*.jar" />
  </patternset>

  <!--
       Builds the DCS (includes bootstrap class and embedded jetty).
    -->
  <target name="carrot2.dcs.build" depends="basedir.check, carrot2.dcs.war">
    <mkdir dir="${dcs.dir}/lib" />
    <copy todir="${dcs.dir}/lib">
      <fileset dir="${carrot2.master.basedir}/lib">
        <include name="**/jetty*.jar" />
        <include name="**/jetty*.LICENSE" />
        <include name="**/args4j*.jar" />
        <include name="**/args4j*.LICENSE" />
        <include name="**/servlet-api*.jar" />
        <include name="**/log4j-*.jar" />
        <include name="**/log4j-*.LICENSE" />
      	<include name="org.slf4j/slf4j-log4j12-*.jar" />
      	<include name="org.slf4j/slf4j-api-*.jar" />
      	<include name="org.slf4j/*.LICENSE" />
      </fileset>
      <mapper type="flatten" />
    </copy>

    <copy toDir="${dcs.dir}/classes">
      <fileset dir="core/carrot2-util-log4j/src/">
        <include name="log4j-dcs*.xml" />    		
      </fileset>  
    </copy>

    <jar jarfile="${dcs.dir}/lib/carrot2-dcs-bootstrap-${carrot2.version}.jar">
      <fileset dir="${dcs.dir}/classes">
        <include name="**/DcsApp*.class" />
        <include name="**/Log4jJettyLog.class" />
        <include name="**/*.xml" />
        <exclude name="**/*.java" />
      </fileset>
      <fileset dir="core/carrot2-util-log4j/src">
        <include name="appender-*" />
        <include name="filters-*" />
      </fileset>
    </jar>

    <copy todir="${dcs.dir}">
      <fileset dir="${carrot2.dcs.basedir}/etc/distribution">
        <include name="dcs.*" />
        <include name="invoker.jar" />
      </fileset>
    </copy>

    <copy todir="${dcs.dir}">
      <fileset dir="${carrot2.dcs.basedir}">
        <include name="examples/**" />
		    <exclude name="**/tmp/**" />
		    <exclude name="**/obj/**" />
		    <exclude name="**/*.suo" />
      </fileset>
      <fileset dir="${carrot2.dcs.basedir}/etc/distribution">
        <include name="readme.txt" />
      </fileset>
      <fileset dir="${carrot2.master.basedir}">
        <include name="carrot2.LICENSE" />
        <include name="carrot2.CONTRIBUTORS" />
      </fileset>
    </copy>

    <delete dir="${dcs.dir}/classes" />
  </target>

  <!--
       Builds the DCS ZIP archive.
    -->
  <target name="carrot2.dcs.dist" depends="basedir.check, carrot2.dcs.build">
    <carrot2.readme readme.src="${carrot2.dcs.basedir}/etc/distribution/readme.txt"
                    readme.dest="${dcs.dir}/readme.txt" />
    <zip destfile="${dcs.dir}/../${dcs.dist.base}-${carrot2.version}.zip">
      <zipfileset dir="${dcs.dir}" prefix="${dcs.dist.base}-${carrot2.version}">
        <exclude name="**/*.sh" />
      </zipfileset>
      <zipfileset dir="${dcs.dir}" prefix="${dcs.dist.base}-${carrot2.version}" filemode="755">
        <include name="**/*.sh" />
      </zipfileset>
    </zip>
    <delete dir="${dcs.dir}" failonerror="false" />
  </target>

  <!-- 
       Builds the DCS war file.
    -->
  <target name="carrot2.dcs.war" depends="basedir.check, jar, lib.flattened">
    <!-- Add DCS-specific JARs -->
  	<property name="dcs.lib.dir" location="${dcs.dir}/lib-tmp" />
    <copy todir="${dcs.lib.dir}">
      <fileset dir="${carrot2.master.basedir}">
        <patternset refid="lib.dcs" />
      </fileset>
      <mapper type="flatten"/>
    </copy>

    <mkdir dir="${dcs.dir}/war" />
    <mkdir dir="${dcs.dir}/classes" />

    <javac srcdir="${carrot2.dcs.basedir}/src" destdir="${dcs.dir}/classes">
      <classpath refid="lib.classpath" />
      <classpath path="${jar.dir}/carrot2-core-${carrot2.version}.jar" />
    </javac>

    <war destfile="${dcs.war.dir}/${dcs.war.base.name}.war"
         webxml="${carrot2.dcs.basedir}/web/WEB-INF/web.xml">
      <fileset dir="${carrot2.dcs.basedir}/web">
        <exclude name="WEB-INF" />
      </fileset>

      <zipfileset prefix="WEB-INF/suites" dir="${carrot2.master.basedir}/core/carrot2-component-suites/suites">
        <include name="algorithm-*.xml" />
        <include name="source-*.xml" />
        <include name="suite-dcs.xml" />
      </zipfileset>
      <zipfileset prefix="WEB-INF/resources" 
      	          dir="${carrot2.master.basedir}/core/carrot2-util-text/src-resources" />

      <lib dir="${lib.flattened}">
      	<exclude name="**/slf4j-*" />
      	<exclude name="**/carrot2-mini*.jar" />
      	<exclude name="**/carrot2-core-sources*.jar" />
      	<exclude name="**/commons-collections*" />
      	<exclude name="**/commons-io*" />
      </lib>
      <lib dir="${dcs.lib.dir}" />

      <classes dir="${dcs.dir}/classes">
        <exclude name="**/*.java" />
      </classes>
      <classes dir="${carrot2.dcs.basedir}/src">
        <include name="**/*.xml" />
        <exclude name="**/*.java" />
      </classes>
      <classes dir="core/carrot2-util-log4j/src">
        <include name="appender-*" />
        <include name="filters-*" />
      </classes>
    </war>

  	<delete dir="${dcs.lib.dir}" />
  </target>

  <!-- Copies the runtime resources to the compiled classes directory. -->
  <target name="carrot2.dcs.resources.test" depends="basedir.check">
    <mkdir dir="${build.dir.tests}" />

    <copy todir="${build.dir.tests}" includeemptydirs="false">
      <fileset dir="applications">
        <include name="carrot2-dcs/src/**/*.xml" />
      </fileset>
      <regexpmapper from="^.*src(-resources)?(.*)$$" to="\2" />
    </copy>
  </target>

  <target name="carrot2.dcs.clean" depends="basedir.check">
    <delete dir="${dcs.dir}" />
  </target>

  <target name="basedir.check">
    <basedir-check main-basedir="${basedir}" internal-basedir="${carrot2.dcs.basedir}" />
  </target>
</project>
